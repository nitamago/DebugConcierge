import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.jdt.core.ToolFactory;
import org.eclipse.jdt.core.compiler.IScanner;
import org.eclipse.jdt.core.compiler.ITerminalSymbols;
import org.eclipse.jdt.core.dom.AST;
import org.eclipse.jdt.core.dom.ASTParser;
import org.eclipse.jdt.core.dom.ASTVisitor;
import org.eclipse.jdt.core.dom.CompilationUnit;

import py4j.GatewayServer;

public class Main {

	public static void main(String[] args) {
		Main app = new Main();
	    // app を gateway.entry_point に設定
	    GatewayServer server = new GatewayServer(app);
	    server.start();
	    System.out.println("Gateway Server Started");
	}

	public String get_token(String src){
		IScanner scanner = ToolFactory.createScanner(true, false, true, "1.9");
        scanner.setSource(src.toCharArray());
        int tokenType;
        while ((tokenType = scanner.getNextToken()) != ITerminalSymbols.TokenNameEOF) {
            int start = scanner.getCurrentTokenStartPosition();
            int end = scanner.getCurrentTokenEndPosition();
            int line = scanner.getLineNumber(start);
            String token = new String(scanner.getCurrentTokenSource());
            String tokenDesc = String.format("%4d |%4d |%4d |%4d | %s", tokenType,
                    start, end, line, token);
            System.out.println(tokenDesc);
        }
	}
	
	public String analyze(String src){
		// Create AST Parser
		ASTParser parser = ASTParser.newParser(AST.JLS8);
		parser.setSource(src.toCharArray());
		CompilationUnit unit = (CompilationUnit) parser.createAST(new NullProgressMonitor());
		TokenVisitor visitor = new TokenVisitor();
		unit.accept(visitor);
		return src;
			
	}
}
